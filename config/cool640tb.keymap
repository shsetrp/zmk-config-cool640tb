// #define ZMK_POINTING_DEFAULT_MOVE_VAL 800 
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 120

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// #include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        toggle {
            bindings = <&kp LS(CAPSLOCK)>;
            key-positions = <16 17>;
            layers = <0 1 2>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <18 19>;
            require-prior-idle-ms = <0>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <18 19>;
            layers = <1 2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "TO_LAYER_0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &kp E         &kp R        &kp T          &kp Y          &kp U        &kp I         &kp O       &kp P
&kp A        &kp S         &kp D         &kp F        &kp G          &kp H          &kp J        &kp K         &kp L       &kp MINUS
&mt LSHFT Z  &kp X         &kp C         &kp V        &kp B          &kp N          &kp M        &kp COMMA     &kp PERIOD  &kp SLASH
&kp TAB      &kp UP_ARROW  &kp LEFT_ALT  &lt 2 SPACE  &mt LCTRL TAB  &kp BACKSPACE  &lt 1 ENTER  &kp LEFT_GUI  &kp LEFT    &kp RIGHT
            >;
        };

        Layer1 {
            bindings = <
&kp ESCAPE              &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp NUMBER_3  &none            &kp BACKSPACE  &kp UP    &kp DELETE  &kp N0
&none                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp NUMBER_2  &kp HOME         &kp LEFT       &kp DOWN  &kp RIGHT   &kp END
&mt LSHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp NUMBER_1  &kp LS(LC(TAB))  &kp LC(TAB)    &trans    &trans      &trans
&trans                  &trans           &trans           &kp SPACE        &trans        &trans           &trans         &trans    &trans      &trans
            >;
        };

        Layer2 {
            bindings = <
&kp EXCLAMATION  &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT  &kp AMPERSAND  &kp ASTERISK          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET
&kp F2           &kp F5     &kp F7    &kp F8      &kp F10      &kp SEMICOLON  &kp SQT               &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE
&kp LSHIFT       &kp LS(Z)  &none     &none       &none        &kp GRAVE      &kp NON_US_BACKSLASH  &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION
&trans           &trans     &trans    &trans      &trans       &trans         &kp ENTER             &trans                &trans                 &trans
            >;
        };

        MOUSE {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T          &kp Y          &kp U        &kp I         &kp O       &kp P
&kp A             &kp S         &kp D         &kp F        &kp G          &kp H          &mkp MB1     &mkp MB2      &mkp MB1    &mkp MB2
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B          &kp N          &kp M        &kp COMMA     &kp PERIOD  &kp SLASH
&kp DOWN          &kp UP_ARROW  &kp LEFT_ALT  &lt 2 SPACE  &mt LCTRL TAB  &kp BACKSPACE  &lt 1 ENTER  &kp LEFT_GUI  &kp LEFT    &kp RIGHT
            >;
        };

        None1 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2      &kp R         &kp T            &kp Y     &kp U         &kp I      &kp O       &kp P
&kp A         &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp H     &kp J         &kp K      &kp L       &kp ENTER
&kp Z         &kp X           &kp C             &kp V         &kp B            &kp N     &kp M         &kp COMMA  &kp PERIOD  &kp LEFT_SHIFT
&kp N1        &kp N2          &kp LEFT_CONTROL  &kp LEFT_GUI  &mkp MB1         &mkp MB2  &kp LEFT_ALT  &to 0      &kp N3      &kp N4
            >;
        };

        None2 {
            bindings = <
&kp Q   &kp W   &kp E             &kp R         &kp T        &kp Y        &kp U         &kp I          &kp O       &kp P
&kp A   &kp S   &kp D             &kp F         &kp G        &kp H        &kp J         &kp K          &kp L       &kp ENTER
&kp Z   &kp X   &kp C             &kp V         &kp B        &kp N        &kp M         &kp COMMA      &kp PERIOD  &kp LEFT_SHIFT
&kp N1  &kp N2  &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 1 SPACE  &lt 2 SPACE  &kp LEFT_ALT  &kp BACKSPACE  &kp N3      &kp N4
            >;
        };

        None3 {
            bindings = <
&kp Q   &kp W   &kp E             &kp R         &kp T        &kp Y        &kp U         &kp I          &kp O       &kp P
&kp A   &kp S   &kp D             &kp F         &kp G        &kp H        &kp J         &kp K          &kp L       &kp ENTER
&kp Z   &kp X   &kp C             &kp V         &kp B        &kp N        &kp M         &kp COMMA      &kp PERIOD  &kp LEFT_SHIFT
&kp N1  &kp N2  &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 1 SPACE  &lt 2 SPACE  &kp LEFT_ALT  &kp BACKSPACE  &kp N3      &kp N4
            >;
        };
    };
};
